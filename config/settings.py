"""
Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/

For the full list of settings and their values, see
https://docs.djangoproject.com/
"""

import os
import environ
import urllib3

urllib3.disable_warnings()

env = environ.Env()

env.read_env(env.str('ENV_PATH', '.env'))

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.str('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool('DEBUG', default=False)

# Define allowed host

ALLOWED_HOSTS = env.tuple('ALLOWED_HOSTS')

# Installed apps definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'mozilla_django_oidc',  # Load after auth
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app',
    'rest_framework'
]

# Define meddleware

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# Define authentication backends

AUTHENTICATION_BACKENDS = (
    'mozilla_django_oidc.auth.OIDCAuthenticationBackend',
    #'auth.CustomOIDCAuthenticationBackend',  # Custom backend
    'django.contrib.auth.backends.ModelBackend',
)

# Define root url config

ROOT_URLCONF = 'config.urls'

# Define templates

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# Define WSGI

WSGI_APPLICATION = 'config.wsgi.application'


# Define Database Default sqlite

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',  # NOQA
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',  # NOQA
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',  # NOQA
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',  # NOQA
    },
]


# Internationalization

LANGUAGE_CODE = env.str('LANGUAGE_CODE')

# Define Time Zone

TIME_ZONE = env.str('TIME_ZONE')

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)

STATIC_URL = '/static/'

#
# Auth user model
#

AUTH_USER_MODEL = 'app.User'

#
# LOGIN/REDIRECT URL
#

LOGIN_REDIRECT_URL = '/accounts/login/'
LOGOUT_REDIRECT_URL = '/accounts/login/'

# Session Cookie Age

SESSION_COOKIE_AGE = env.int('SESSION_COOKIE_AGE')

#
# OIDC settings
#

OIDC_OP_JWKS_ENDPOINT = env.str("OIDC_OP_JWKS_ENDPOINT")
OIDC_OP_AUTHORIZATION_ENDPOINT = env.str('OIDC_OP_AUTHORIZATION_ENDPOINT')
OIDC_OP_TOKEN_ENDPOINT = env.str('OIDC_OP_TOKEN_ENDPOINT')
OIDC_OP_USER_ENDPOINT = env.str('OIDC_OP_USER_ENDPOINT')
OIDC_RP_SIGN_ALGO = env.str('OIDC_RP_SIGN_ALGO')
OIDC_RP_SCOPES = env.str('OIDC_RP_SCOPES')
OIDC_RP_CLIENT_ID = env.str('OIDC_RP_CLIENT_ID')
OIDC_RP_CLIENT_SECRET = env.str('OIDC_RP_CLIENT_SECRET')
OIDC_TOKEN_USE_BASIC_AUTH = env.bool('OIDC_TOKEN_USE_BASIC_AUTH')
OIDC_VERIFY_SSL = env.bool('OIDC_VERIFY_SSL')
OIDC_STORE_ACCESS_TOKEN = env.bool('OIDC_STORE_ACCESS_TOKEN')
OIDC_STORE_ID_TOKEN = env.bool('OIDC_STORE_ID_TOKEN')


DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
OIDC_DRF_AUTH_BACKEND = 'mozilla_django_oidc.auth.OIDCAuthenticationBackend'


#Pagination allows you to control how many objects per page are returned.
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'mozilla_django_oidc.contrib.drf.OIDCAuthentication',
        'rest_framework.authentication.SessionAuthentication'
        # other authentication classes, if needed
    ],

    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10
}